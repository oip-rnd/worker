cmd:
  type: python-venv
  command:
    default: python -u run.py
  path:
    default: ~/.opereto/operetovenv
item_properties:
-   key: testing_tool_command
    value:
    type: text
    direction: input
    mandatory: true
    help: The tool to execute
-   key: report_file_path
    value: path to the report file
    type: text
    direction: input
    mandatory: false
    help: Path to the report file generated by the execution tool
-   key: tool_valid_exit_codes
    value:
    type: text
    direction: input
    mandatory: false
    help: Comma separated valid exit codes. e.g:1,5,8 for the execution of the testing tool
-   editor: checkbox
    key: upload_report_to_storage
    direction: input
    mandatory: true
    type: boolean
    value: false
    help: if true, will upload the report to the specified storage using the specified storage service
-   key: storage_config
    direction: input
    editor: json
    mandatory: false
    type: json
    value: {}
    help: >
      Storage upload service configurations, passing needed input for the selected storage upload service.
      The example below is for using Opereto's "aws_save_to_s3" service (part of the Opereto AWS Services package)
    example: {
      "storage_config": {
      "service_id": "aws_save_to_s3",
      "source_path_input_property_name": "source_path",
      "storage_url_output_property_name": "storage_url",
      "input": {
            "aws_access_key": "GLOBALS.aws_opereto_services-aws_access_key",
            "aws_secret_key": "GLOBALS.aws_opereto_services-aws_secret_key",
            "bucket_name": "bucket_name",
            "content_type": "text/plain",
            "create_bucket": true,
            "make_public": false,
            "presigned_url_expiry": 2592000,
            "target_path": "opereto"
      },
      "title": "Upload report to AWS S3"
      }
    }
timeout: 7200
type: action